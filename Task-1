import json
from datetime import datetime

class Task:
    def __init__(self, name, priority, due_date=None, completed=False):
        self.name = name
        self.priority = priority
        self.due_date = due_date
        self.completed = completed

    def __str__(self):
        status = "Completed" if self.completed else "Pending"
        return f"{self.name} - Priority: {self.priority}, Due Date: {self.due_date}, Status: {status}"

class TaskManager:
    def __init__(self):
        self.tasks = []

    def add_task(self, task):
        self.tasks.append(task)

    def remove_task(self, task_name):
        self.tasks = [task for task in self.tasks if task.name != task_name]

    def mark_completed(self, task_name):
        for task in self.tasks:
            if task.name == task_name:
                task.completed = True

    def list_tasks(self):
        for task in self.tasks:
            print(task)

    def save_tasks(self, filename):
        with open(filename, 'w') as file:
            json.dump([vars(task) for task in self.tasks], file)

    def load_tasks(self, filename):
        with open(filename, 'r') as file:
            data = json.load(file)
            self.tasks = [Task(**task) for task in data]

def main():
    task_manager = TaskManager()

    # Load tasks from file if it exists
    try:
        task_manager.load_tasks("tasks.json")
    except FileNotFoundError:
        pass

    while True:
        print("\nTaski - To-Do List Application")
        print("1. Add Task")
        print("2. Remove Task")
        print("3. Mark Task as Completed")
        print("4. List Tasks")
        print("5. Save and Quit")

        choice = input("Enter your choice: ")

        if choice == "1":
            name = input("Enter task name: ")
            priority = input("Enter task priority (high/medium/low): ")
            due_date = input("Enter due date (YYYY-MM-DD): ")
            if due_date:
                due_date = datetime.strptime(due_date, "%Y-%m-%d")
            task_manager.add_task(Task(name, priority, due_date))
        elif choice == "2":
            task_name = input("Enter task name to remove: ")
            task_manager.remove_task(task_name)
        elif choice == "3":
            task_name = input("Enter task name to mark as completed: ")
            task_manager.mark_completed(task_name)
        elif choice == "4":
            task_manager.list_tasks()
        elif choice == "5":
            task_manager.save_tasks("tasks.json")
            print("Tasks saved. Exiting.")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
